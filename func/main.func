;;
;;  main FunC file
;;

int equal_slices? (slice a, slice b) asm "SDEQ";
#include "struct/op-codes.func";
#include "struct/exit-codes.func";
#include "struct/math.func";
#include "struct/msg-utils.func";
#include "struct/storage.func";
#include "struct/handles.func";

{-
    SHOULD
    [+] accept coins for deploy
    [+] accept nft and change auction statud
    [+] return transaction if auction already end
    [+] can cancel auction
    [+] accept new bid -> check auction end -> end auction
-}
() recv_internal(int my_balance, int msg_value, cell in_msg_cell, slice in_msg_body) impure {
    slice cs = in_msg_cell.begin_parse();
    throw_if(0, cs~load_uint(4) & 1);

    slice sender_addr = cs~load_msg_addr();
    init_data();

    if (equal_slices?(sender_addr, mp_addr)) {
        return ();
    }

    if (equal_slices?(sender_addr, nft_addr)) {
        handle::try_init_auction(sender_addr, in_msg_body);
        return ();
    }

    if (end? == 1) {
        handle::return_transaction(sender_addr);
        return ();
    }
    

    if (equal_slices?(sender_addr, nft_owner)) {
        handle::try_cancel(in_msg_body);
        return();
    }

    handle::new_bid(sender_addr, msg_value);
}